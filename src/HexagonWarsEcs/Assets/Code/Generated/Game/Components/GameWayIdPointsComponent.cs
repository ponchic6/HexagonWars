//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Code.Gameplay.Features.Migration.WayIdPoints wayIdPoints { get { return (Code.Gameplay.Features.Migration.WayIdPoints)GetComponent(GameComponentsLookup.WayIdPoints); } }
    public bool hasWayIdPoints { get { return HasComponent(GameComponentsLookup.WayIdPoints); } }

    public void AddWayIdPoints(System.Collections.Generic.List<int> newValue) {
        var index = GameComponentsLookup.WayIdPoints;
        var component = (Code.Gameplay.Features.Migration.WayIdPoints)CreateComponent(index, typeof(Code.Gameplay.Features.Migration.WayIdPoints));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceWayIdPoints(System.Collections.Generic.List<int> newValue) {
        var index = GameComponentsLookup.WayIdPoints;
        var component = (Code.Gameplay.Features.Migration.WayIdPoints)CreateComponent(index, typeof(Code.Gameplay.Features.Migration.WayIdPoints));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveWayIdPoints() {
        RemoveComponent(GameComponentsLookup.WayIdPoints);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherWayIdPoints;

    public static Entitas.IMatcher<GameEntity> WayIdPoints {
        get {
            if (_matcherWayIdPoints == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.WayIdPoints);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherWayIdPoints = matcher;
            }

            return _matcherWayIdPoints;
        }
    }
}
