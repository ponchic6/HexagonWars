//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Code.Gameplay.Features.Migration.MigrationAmount migrationAmount { get { return (Code.Gameplay.Features.Migration.MigrationAmount)GetComponent(GameComponentsLookup.MigrationAmount); } }
    public bool hasMigrationAmount { get { return HasComponent(GameComponentsLookup.MigrationAmount); } }

    public void AddMigrationAmount(int newValue) {
        var index = GameComponentsLookup.MigrationAmount;
        var component = (Code.Gameplay.Features.Migration.MigrationAmount)CreateComponent(index, typeof(Code.Gameplay.Features.Migration.MigrationAmount));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceMigrationAmount(int newValue) {
        var index = GameComponentsLookup.MigrationAmount;
        var component = (Code.Gameplay.Features.Migration.MigrationAmount)CreateComponent(index, typeof(Code.Gameplay.Features.Migration.MigrationAmount));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveMigrationAmount() {
        RemoveComponent(GameComponentsLookup.MigrationAmount);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherMigrationAmount;

    public static Entitas.IMatcher<GameEntity> MigrationAmount {
        get {
            if (_matcherMigrationAmount == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.MigrationAmount);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherMigrationAmount = matcher;
            }

            return _matcherMigrationAmount;
        }
    }
}
